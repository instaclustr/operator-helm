fullnameOverride: ""
replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: latest

port: 8080

# extraPorts:
# - name: rpc
#   port: 8081

imagePullSecrets: []

operatorCreds:
  USERNAME: ""
  APIKEY: ""
  HOSTNAME: ""

deployment: {}
  #annotations: {}
  #metadataAnnotations: {}
  #strategy:
  #  rollingUpdate:
  #    maxSurge: 1
  #    maxUnavailable: 1
  #  type: RollingUpdate

service:
  type: ClusterIP

#rbac: {}
  #type: Role # or ClusterRole
  #rules:
  #  - apiGroups:
  #      - ""
  #    resources:
  #      - "*"
  #    verbs:
  #      - get
  #      - list
  #      - watch

initContainers: {}

livenessProbe:
  enabled: false
  port: 8081
  path: /healthz
  failureThreshold: 5
  successThreshold: 1
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 5
  scheme: HTTP
  # Supported values: "HTTP", "HTTPS"(must be uppercased)
readinessProbe:
  enabled: true
  port: 8081
  path: /readyz
  failureThreshold: 5
  successThreshold: 1
  initialDelaySeconds: 5
  periodSeconds: 5
  timeoutSeconds: 1
  scheme: HTTP
  # Supported values: "HTTP", "HTTPS"(must be uppercased)

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
